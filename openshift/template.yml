apiVersion: v1
kind: Template
labels:
  template: openshift-image-builder
message: |- 
  Access the backend via a web ui
metadata:
  annotations:
    description: Deploys Openshift Image Builder Utility on Openshift

      WARNING- This deployment setup is still in the experimental stage.
    iconClass: icon-spring
    openshift.io/display-name: OpenShift Image Builder
    openshift.io/documentation-url: https://github.com/CSCfi/OpenshiftImageBuilder
    openshift.io/support-url: https://www.csc.fi/contact-info
    openshift.io/long-description: 
    openshift.io/provider-display-name: CSC
    tags: java
    template.openshift.io/bindable: "false"
  name: openshift-image-builder
  
objects:

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: ${APPLICATION_NAME}
  spec:
    replicas: 1
    selector:
      app: ${APPLICATION_NAME}
      deploymentconfig: ${APPLICATION_NAME}
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          app: ${APPLICATION_NAME}
          deploymentconfig: ${APPLICATION_NAME}
      spec:
        containers:
          - image: ''
            imagePullPolicy: Always
            name: osimagebuilder-backend
            ports:
              - containerPort: 8080
                protocol: TCP
            resources: {}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
    test: false
    triggers:
      - type: ConfigChange
      - imageChangeParams:
          automatic: true
          containerNames:
            - osimagebuilder-backend
          from:
            kind: ImageStreamTag
            name: ${APPLICATION_NAME}:latest
        type: ImageChange

- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    ports:
      - name: 8080-tcp
        port: 8080
        protocol: TCP
        targetPort: 8080
    selector:
      deploymentconfig: ${APPLICATION_NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
    to:
      kind: Service
      name: ${APPLICATION_NAME}
      weight: 100
    wildcardPolicy: None
   
- apiVersion: build.openshift.io/v1
  kind: BuildConfig
  metadata:
    labels:
      app: ${APPLICATION_NAME}
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: ${APPLICATION_NAME}:latest
    postCommit: {}
    resources: {}
    runPolicy: Serial
    source:
      git:
        ref: master
        uri: 'https://github.com/CSCfi/OpenshiftImageBuilder'
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: "DockerImage"
          name: "fabric8/s2i-java"
      type: "Source"
    triggers:
      - type: ImageChange
      - type: ConfigChange
      
- apiVersion: image.openshift.io/v1
  kind: ImageStream
  metadata:
    labels:
      build: ${APPLICATION_NAME}
    name: ${APPLICATION_NAME}
  spec:
    lookupPolicy:
      local: false

parameters:
- description: Application name.
  displayName: Openshift Image Builder Application Name
  name: APPLICATION_NAME
  required: true      